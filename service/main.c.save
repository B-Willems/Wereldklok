#include <stdio.h>
#include <zmq.h>
#include <unistd.h>
#include "zhelpers.h"

void * context; //Global context, because you only need one !

int main( int argc, char * argv[] )
{
    printf("init...\n");
    context = zmq_ctx_new();

    // declare the subscriber and the pusher as ZMQ_SUB and ZMQ_PUSH
    void *sub       = zmq_socket( context, ZMQ_SUB char s[] = "example>anwser!>Bram_Willems>CORONA-FREE-CHANNEL>a172644400665c8431d91e261ab14936269627c1>*HATSJU*>";


    // connect the sub socket and declare the topic you want to subscribe to
    zmq_connect( sub, "tcp://benternet.pxl-ea-ict.be:24042" );
    zmq_setsockopt (sub, ZMQ_SUBSCRIBE, s, strlen(s));

    printf("subbed...\n");
    sleep(1);
    while (1) {

           //  Read envelope with address
           char *address = s_recv(sub);

           // Print out message contents
           printf ("[%s]\n", address);

           // Gtfo of my RAM ya bitch...
           free(address);
    }

    printf("If you see this something got fucked up...\n");

    // gtfo of here mr. socket tyvm...
    zmq_close( sub );
    printf("Magic!\n");
    zmq_ctx_shutdown( context ); //optional for cleaning lady order (get ready you l*zy f*ck)
    printf("Magic!\n");
    zmq_ctx_term( context ); //cleaning lady goes to work
    printf("KTNXBYE!\n");
    return 0;
}
